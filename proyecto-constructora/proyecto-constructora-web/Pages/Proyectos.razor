@page "/proyectos"

@using Constructora.Application.Dto
@using Newtonsoft.Json
@using RestSharp

@inject IMatToaster Toaster

<h3>Proyectos</h3>
<MatButton OnClick="@(e => { dialogIsOpen = true; })">Crear</MatButton>

<table class="table">
    <thead>
        <tr>
            <td>
                ProyectoId
            </td>
            <td>
                NroContrato
            </td>
            <td>
                Nombre
            </td>
            
            <td>
                Apellidos
            </td>

            <td>
                Ciudad
            </td>
            <td>
                TipoObra
            </td>
            <td>
                Valor
            </td>
            <td>Editar</td>
            <td>Eliminar</td>
        </tr>
    </thead>
    <tbody>
       @foreach (var proyecto in proyectos ??  new  List<ProyectoDto>())   
        {
            <tr>
                <td>
                    @proyecto.ProyectoId
                </td>
                <td>
                    @proyecto.NroContrato
                </td>
                <td>
                    @proyecto.Nombre
                </td>

                 <td>
                    @proyecto.Apellidos

                </td>
                <td>
                    @proyecto.Ciudad?.Nombre
                </td>
                <td>
                    @proyecto.TipoObra?.Nombre
                </td>
                <td>
                    @proyecto.Valor
                </td>

                <td>
                    <button @onclick="()=>ActualizarProyectos(proyecto)">Actualizar</button>
                </td>

                <td>
                    <button @onclick="()=>EliminarProyecto(proyecto)">Eliminar</button>
                </td>
            </tr>


        }

    




    </tbody>
</table>
<MatDialog @bind-IsOpen="@dialogIsOpen">
    <MatDialogTitle>Crear Persona</MatDialogTitle>
    <MatDialogContent>

        <div class="forum-group">
            <label for="NroContrato">Nro Contrato</label>
            <input class="form-control" id="NroContrato" @bind-value="@proyecto.NroContrato" />
        </div>

        <div class="forum-group">
            <label for="Nombre">Nombre</label>
            <input class="form-control" id="Nombre" @bind-value="@proyecto.Nombre" />
        </div>
        <div class="forum-group">
            <label for="Apellidos">Apellidos</label>
            <input class="form-control" id="Apellidos" @bind-value="@proyecto.Apellidos" />
        </div>
        

         <div class="forum-group">
            <label for="Valor">Ciudad</label>
           @* <MatAutocompleteList Items="@constructoraDbcontex.ciudades" CustomStringSelector="@(i => i?.Nombre)" @bind-Value="@proyecto.Ciudad" TItem="Ciudad" Label="Seleccione la ciudad">
                <ItemTemplate>
                    <div style="display: flex; flex-direction: row; width: 100%;">
                        <div style="flex: 1;">@context.Nombre</div>
                    </div>
                </ItemTemplate>
            </MatAutocompleteList>
*@
            
            
<br />
<br />
<br />
        </div>


        <div class="forum-group">
            <label for="TipoObra">Valor</label>
            <input class="form-control" id="valor" @bind-value="@proyecto.Valor" />
        </div>

        <div class="forum-group">
            <label for="Valor">Tipo Obra</label>
            @*<MatAutocompleteList Items="@constructoraDbcontex.tipoObra" CustomStringSelector="@(i => i?.Nombre)" @bind-Value="@proyecto.TipoObra" TItem="TipodeObraDto" Label="Seleccione el tipo de obra">
                <ItemTemplate>
                    <div style="display: flex; flex-direction: row; width: 100%;">
                        <div style="flex: 1;">@context.Nombre</div>
                    </div>
                </ItemTemplate>
            </MatAutocompleteList>*@

            
            
<br />
<br />
<br />
        </div>

    </MatDialogContent>
    <MatDialogActions>
        <MatButton OnClick="@(e => { dialogIsOpen = false; proyecto = new ProyectoDto
            {
                TipoObraId = -1,
                CiudadId = -1,
            }; })">Cancelar</MatButton>
        <MatButton OnClick="@GuardarProyecto">OK</MatButton>
    </MatDialogActions>
</MatDialog>

@code {
    protected bool dialogIsOpen { get; set; }

    //[Inject]
    //public ConstructoraDbcontex constructoraDbcontex { get; set; }
    ProyectoDto proyecto = new ProyectoDto();

    protected IEnumerable< ProyectoDto > proyectos = new List<ProyectoDto >();
    ProyectoDto tipoObra = new ProyectoDto();

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            var client = new RestClient();
            var request = new RestRequest("https://localhost:7112/api/Proyecto ", Method.Get);
            request.AddHeader("Content-Type", "application/json");
            var response = client.Execute(request);

            if (response.Content != null)
            {
                proyectos = Newtonsoft.Json.JsonConvert.DeserializeObject<IEnumerable< ProyectoDto >>(response.Content);
                StateHasChanged();
            }
        }
        base.OnAfterRender(firstRender);
    }



    protected void GuardarProyecto()
    {
        //if (proyecto.TipoObra.TipodeObraId < 1)
        //{
        //    Toaster.Add("El tipo de obra es obligatorio", MatToastType.Danger, "No es posible guardar el proyecto", "danger");
        //    return;
        //}

        //if (proyecto.ProyectoId > 0)
        //    constructoraDbcontex.proyectos.Update(proyecto);
        //else
        //    constructoraDbcontex.proyectos.Add(proyecto);

        //constructoraDbcontex.SaveChanges();
        //dialogIsOpen = false;
     ProyectoDto   proyecto = new ProyectoDto
            {
                TipoObraId = -1,
                CiudadId = -1,
            };
    }

    protected void EliminarProyecto(ProyectoDto proyecto)
    
       {
        var client = new RestClient();
        var request = new RestRequest("https://localhost:7112/api/Proyecto/"+proyecto.ProyectoId, Method.Delete);
        request.AddHeader("Content-Type", "application/json");
        var response = client.Execute(request);
        //Se elimina la serialización porque no llega respuesta
        //if (response.Content != null)
        //{
        //    proyectos = Newtonsoft.Json.JsonConvert.DeserializeObject<IEnumerable<CiudadDto>>(response.Content);
        //    StateHasChanged();
        //}
       //constructoraDbcontex.proyectos.Remove(proyecto);
        //constructoraDbcontex.SaveChanges();
      }


    protected void ActualizarProyectos(ProyectoDto PROYECTO)
    {
        dialogIsOpen = true;
        proyecto = PROYECTO;
        //PROYECTO  es el objeto parámetro ActualizarProyectos(Proyecto PROYECTO)
    }
}