@page "/CuentasxCobrar"
@using Constructora.Application.Dto
@using Newtonsoft.Json
@using RestSharp



<h3>Cuentas_Cobrar</h3>
<MatButton OnClick="@(e => { dialogIsOpen = true; })">Crear</MatButton>
  
<table class="table">
    <thead>
        <tr>
            <td>
                CuentasporCobrarID
            </td>
            <td>
                Contrato
            </td>

            <td>
                Obra
            </td>
            <td>
                Valor
            </td>
            <td>
                Nombre
            </td>
            <td>
                Apellidos
            </td>
                        
            <td>
               Abono
            </td>
            <td>
                Saldo
            </td>
            <td>Editar</td>
            <td>Eliminar</td>
            
        </tr>
    </thead

    <tbody>
        @foreach (var cuentacobrar  in cuentasporCobrar ?? new List<CuentasporCobrarDto>())
        {
            <tr>
                <td>
                    @cuentacobrar.CuentasporCobrarId
                </td>
                <td>
                    @cuentacobrar.Contrato
                </td>
                <td>
                    @cuentacobrar.Obra
                </td>
                <td>
                    @cuentacobrar.Valor
                </td>
                <td>
                    @cuentacobrar.Nombre
                </td>
                <td>
                    @cuentacobrar.Apellidos

                </td>
                <td>
                    @cuentacobrar.Abono
                </td>
                <td>
                    @cuentacobrar.Saldo
                </td>
               <td>
                    <button @onclick="()=>ActualizarCuentasCobrar(cuentacobrar)">Actualizar</button>
                </td>

                <td>
                    <button @onclick="()=>EliminarCuenta(cuentacobrar)">Eliminar</button>
                </td>


            </tr>
        }
    </tbody>
</table>
<MatDialog @bind-IsOpen="@dialogIsOpen">
    <MatDialogTitle>Crear Cuenta</MatDialogTitle>
    <MatDialogContent>


<div class ="forum-group">
    <label for = "Contrato">Contrato</label>
<input class = "form-control" id="Contrato" @bind-value = "@cuentacobrar.Contrato" />
</div>

<div class ="forum-group">
    <label for = "Obra"> Obra </label>
<input class = "form-control" id="Obra" @bind-value = "@cuentacobrar.Obra" /> 
</div>

<div class ="forum-group">
    <label for = "Valor"> Valor </label>
<input class = "form-control" id="Valor" @bind-value = "@cuentacobrar.Valor" /> 
</div>

<div class ="forum-group">
    <label for = "nombre"> Nombre </label>
<input class = "form-control" id="Nombre" @bind-value = "@cuentacobrar.Nombre" /> 
</div>

<div class ="forum-group">
    <label for = "Apellidos"> Apellidos </label>
<input class = "form-control" id="Apellidos" @bind-value = "@cuentacobrar.Apellidos" /> 
</div>

<div class ="forum-group">
    <label for = "Abono">Abono</label>
<input class = "form-control" id="Abono" @bind-value = "@cuentacobrar.Abono" /> 
</div>

<div class ="forum-group">
    <label for = "saldo">Saldo</label>
<input class = "form-control" id="Saldo" @bind-value = "@cuentacobrar.Saldo" /> 
</div>

</MatDialogContent>
    <MatDialogActions>
        <MatButton OnClick="@(e => { dialogIsOpen = false; cuentacobrar = new CuentasporCobrarDto(); })">Cancelar</MatButton>
        <MatButton OnClick="@GuardarCuentaCobrar">OK</MatButton>
    </MatDialogActions>
</MatDialog>



@*<button id="btnGuardar" @onclick="GuardarCuentaCobrar">
    Guardar
</button>
*@


<br/>
<br/>
<br/>





@code {
    

    //[Inject]
    //public ConstructoraDbcontex constructoraDbcontex { get; set; }
    //CuentasporCobrarDto cuentacobrar = new CuentasporCobrarDto();

    protected bool dialogIsOpen { get; set; }
    protected IEnumerable<CuentasporCobrarDto> cuentasporCobrar = new List< CuentasporCobrarDto >();
    CuentasporCobrarDto cuentacobrar = new CuentasporCobrarDto();

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            var client = new RestClient();
            var request = new RestRequest("https://localhost:7112/api/CuentasporCobrar ", Method.Get);
            request.AddHeader("Content-Type", "application/json");
            var response = client.Execute(request);

            if (response.Content != null)
            {
                cuentasporCobrar = Newtonsoft.Json.JsonConvert.DeserializeObject<IEnumerable< CuentasporCobrarDto >>(response.Content);
                StateHasChanged();
            }
        }
        base.OnAfterRender(firstRender);
    }



  protected void GuardarCuentaCobrar()
    {
       //if(cuentacobrar.CuentasporCobrarId > 0)
       //     constructoraDbcontex.cuentasporCobrar.Update(cuentacobrar);
       // else
       //     constructoraDbcontex.cuentasporCobrar.Add(cuentacobrar);
        
       // constructoraDbcontex.SaveChanges();
        dialogIsOpen = false;
       cuentacobrar= new CuentasporCobrarDto();


    }

   
               protected void EliminarCuenta(CuentasporCobrarDto  cuentacobrar) 
              {
               var client = new RestClient();
              var request = new RestRequest("https://localhost:7112/api/CuentasporCobrar/"+ cuentacobrar. CuentasporCobrarId, Method.Delete);
              request.AddHeader("Content-Type", "application/json");
              var response = client.Execute(request);
              //Se elimina la serialización porque no llega respuesta
             //if (response.Content != null)
             //{
            //    ciudades = Newtonsoft.Json.JsonConvert.DeserializeObject<IEnumerable<CiudadDto>>(response.Content);
            //    StateHasChanged();
           //}
           }



    protected void ActualizarCuentasCobrar(CuentasporCobrarDto tipoCuenta)
    {
        dialogIsOpen = true;
        cuentacobrar = tipoCuenta;
        //tipoCuenta  es el objeto parametro; ActualizarCuentasCobrar(CuentasporCobrar tipoCuenta)
    }


}


 

   

    
